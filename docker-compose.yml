services:

  adguard:
    image: adguard/adguardhome:latest
    container_name: adguard
    volumes:
      - "${ADGUARD_CONFIG}/work:/opt/adguardhome/work"
      - "${ADGUARD_CONFIG}/conf:/opt/adguardhome/conf"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "3000:3000/tcp"   # Setup-WebUI
      - "80:80/tcp"       # HTTP-DNS-Server
    restart: unless-stopped

  paperless-redis:
    image: redis:7
    container_name: paperless-redis
    restart: unless-stopped

  paperless-db:
    image: postgres:15
    container_name: paperless-db
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    volumes:
      - "${PAPERLESS_DATA}/pgdata:/var/lib/postgresql/data"
    restart: unless-stopped

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless
    depends_on:
      - paperless-redis
      - paperless-db
    ports:
      - "8000:8000"
    environment:
      PAPERLESS_REDIS: redis://paperless-redis:6379
      PAPERLESS_DBHOST: paperless-db
      PAPERLESS_DBUSER: paperless
      PAPERLESS_DBPASS: paperless
      PAPERLESS_DBNAME: paperless
    volumes:
      - "${PAPERLESS_DATA}/data:/usr/src/paperless/data"
      - "${PAPERLESS_DATA}/media:/usr/src/paperless/media"
      - "${PAPERLESS_DATA}/consume:/usr/src/paperless/consume"
      - "${PAPERLESS_DATA}/export:/usr/src/paperless/export"
    restart: unless-stopped

  scanserver:
    image: ghcr.io/nicogartmann/scanner-webui:main
    pull_policy: always
    network_mode: host
    ports:
      - "5000:5000"
    volumes:
      - "${PAPERLESS_DATA}/consume:/app/scan"

  twingate-connector:
    image: twingate/connector:1
    container_name: twingate-connector
    restart: unless-stopped
    environment:
      TWINGATE_NETWORK: ${TWINGATE_NETWORK}
      TWINGATE_ACCESS_TOKEN: ${TWINGATE_ACCESS_TOKEN}
      TWINGATE_REFRESH_TOKEN: ${TWINGATE_REFRESH_TOKEN}
    sysctls:
      net.ipv4.ping_group_range: "0 2147483647"
